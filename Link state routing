set ns [new Simulator]
set nf [open out.nam w]
$ns namtrace-all $nf
set tr [open out.tr w]
$ns trace-all $tr
proc finish {} {
global nf ns tr
$ns flush-trace
close $tr
exec nam out.nam &
exit 0
}
# Define 7 nodes
set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
set n4 [$ns node]
set n5 [$ns node]
set n6 [$ns node]
# Define duplex links between the nodes
$ns duplex-link $n0 $n1 10Mb 10ms DropTail
$ns duplex-link $n1 $n3 10Mb 10ms DropTail
$ns duplex-link $n2 $n1 10Mb 10ms DropTail
$ns duplex-link $n4 $n1 10Mb 10ms DropTail
$ns duplex-link $n5 $n4 10Mb 10ms DropTail
$ns duplex-link $n6 $n5 10Mb 10ms DropTail
# Set link orientations to avoid overlap
$ns duplex-link-op $n0 $n1 orient right-down
$ns duplex-link-op $n1 $n3 orient down-right
$ns duplex-link-op $n2 $n1 orient right-up
$ns duplex-link-op $n4 $n1 orient left-down
$ns duplex-link-op $n5 $n4 orient left-up
$ns duplex-link-op $n6 $n5 orient left
# Define TCP connection and FTP application
set tcp [new Agent/TCP]
$ns attach-agent $n0 $tcp
set ftp [new Application/FTP]
$ftp attach-agent $tcp
# Define TCP Sink at node n3
set sink [new Agent/TCPSink]
$ns attach-agent $n3 $sink
# Define UDP connection and CBR application
set udp [new Agent/UDP]
$ns attach-agent $n2 $udp
set cbr [new Application/Traffic/CBR]
$cbr attach-agent $udp
# Define Null agent at node n6
set null [new Agent/Null]
$ns attach-agent $n6 $null
# Connect agents
$ns connect $tcp $sink
$ns connect $udp $null
# Set routing protocol and events
$ns rtmodel-at 1.0 down $n1 $n3
$ns rtmodel-at 2.0 up $n1 $n3
$ns rtproto DV
# Start FTP and CBR applications
$ns at 0.0 "$ftp start"
$ns at 0.0 "$cbr start"
# Finish simulation at time 5.0
$ns at 5.0 "finish"
# Run the simulation
$ns run
